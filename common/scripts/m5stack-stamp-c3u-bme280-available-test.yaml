id: m5stack_stamp_c3u_bme280_available_test
then:
  - logger.log: 
      format: "Checking bme280 availability..."
      level: INFO
  - while:
      condition:
        and:
          - lambda: 'return isnan(id(${id}_temperature).state);'
          - lambda: 'return isnan(id(${id}_pressure).state);'
          - lambda: 'return isnan(id(${id}_humidity).state);'
      then:
        - logger.log:
            format: "${id} bme280 NOT available: %.1f°C %.1f%% %.1fhPa!'"
            level: ERROR
            args: [ 
              'id(${id}_temperature).state',
              'id(${id}_pressure).state',
              'id(${id}_humidity).state'
            ]
        - <<: !include ../actions/m5stack/stamp-c3u/led/red.yaml
        - delay: 1s
        - repeat:
            count: 9
            then:
              - <<: !include /config/common/actions/m5stack/stamp-c3u/led/orange.yaml
              - delay: 500ms
              - <<: !include /config/common/actions/m5stack/stamp-c3u/led/_off.yaml
              - delay: 500ms
  - logger.log:
      format: '${id} bme280 available: %.1f°C %.1f%% %.1fhPa'
      level: INFO
      args: [ 
        'id(${id}_temperature).state',
        'id(${id}_pressure).state',
        'id(${id}_humidity).state'
      ]
  - <<: !include /config/common/actions/m5stack/stamp-c3u/led/green.yaml
  - delay: 120s
  - <<: !include /config/common/actions/m5stack/stamp-c3u/led/_off.yaml
