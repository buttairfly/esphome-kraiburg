substitutions:
  sensor_id: ${id}_volume
  sensor_ticks_id: ${sensor_id}_ticks
  sensor_volume_id: ${sensor_id}_total
  global_ticks_id: global_${sensor_id}_ticks
  global_volume_base_id: global_${sensor_id}_base
  global_volume_multiplicator_id: global_${sensor_id}_multiplicator
  helper_multiplicator: ${sensor_id}_multiplicator
  helper_base: ${sensor_id}_base
  helper_sensor: ${sensor_id}_raw
  helper_adc_id: ${helper_sensor}_adc
  helper_binary_id: ${helper_sensor}_binary
  # needed substitutions:
  # name_verbose:
  # id:
  # binary_pin:
  # control_led_pin:

packages:
  control-led: !include /config/packages/control-led.yaml

api:
  services:
    - service: set_${sensor_volume_id}
      variables:
        value: float
      then:
        - globals.set:
            id: ${global_volume_base_id}
            value: !lambda 'return value;'
        - globals.set:
            id: ${global_ticks_id}
            value: !lambda 'return 0;'
        - light.turn_off:
            id: ${control_led_id}
        - component.update: ${sensor_ticks_id}
    - service: set_${helper_multiplicator}
      variables:
        value: float
      then:
        - globals.set:
            id: ${global_volume_multiplicator_id}
            value: !lambda 'return value;'
        - component.update: ${sensor_ticks_id}
        - component.update: ${helper_multiplicator}

globals:
  - id: ${global_ticks_id}
    type: int
    restore_value: no
    initial_value: '0'
  - id: ${global_volume_base_id}
    type: float
    restore_value: no
    initial_value: '0.0'
  - id: ${global_volume_multiplicator_id}
    type: float
    restore_value: yes
    initial_value: '0.001' # 1m続 / 1000U

sensor:
  - name: ${name_verbose} Volume Total
    id: ${sensor_volume_id}_absolute
    platform: template
    state_class: total
    device_class: energy
    icon: mdi:meter-gas
    unit_of_measurement: m続
    accuracy_decimals: 3
    lambda: return id(${sensor_volume_id}).state + id(${global_volume_base_id});
    update_interval: 60s
  - name: ${name_verbose} Energy Relative
    id: ${sensor_volume_id}
    platform: template
    state_class: total_increasing
    device_class: energy
    icon: mdi:meter-gas-outline
    unit_of_measurement: m続
    accuracy_decimals: 3
    lambda: return id(${global_ticks_id}) * id(${global_volume_multiplicator_id});
    update_interval: 60s
    on_value:
      - component.update: ${sensor_volume_id}_absolute
  - name: ${name_verbose} Ticks
    id: ${sensor_ticks_id}
    platform: template
    state_class: total_increasing
    icon: mdi:counter
    unit_of_measurement: ''
    accuracy_decimals: 0
    entity_category: diagnostic
    lambda: return id(${global_ticks_id});
    update_interval: 60s
    on_value:
      - component.update: ${sensor_volume_id}

  - name: ${name_verbose} Multiplicator
    id: ${helper_multiplicator}
    platform: template
    icon: mdi:numeric
    unit_of_measurement: ''
    accuracy_decimals: 6
    entity_category: diagnostic
    lambda: return id(${global_volume_multiplicator_id});
    update_interval: 24h
  - name: ${name_verbose} Base Volume
    id: ${helper_base}
    platform: template
    icon: mdi:numeric
    unit_of_measurement: m続
    accuracy_decimals: 3
    entity_category: diagnostic
    lambda: return id(${global_volume_base_id});
    update_interval: 24h

binary_sensor:
  - name: ${name_verbose} Tick
    id: ${helper_binary_id}
    platform: gpio
    pin:
      number: ${binary_pin}
      inverted: false
      mode:
        input: true
        pullup: true
    icon: mdi:square-wave
    # internal: true
    entity_category: diagnostic
    filters:
      - delayed_off: 50ms
    on_release:
      - globals.set:
          id: ${global_ticks_id}
          value: !lambda 'return id(${global_ticks_id}) + 1;'
      - light.toggle:
          id: ${control_led_id}
      - component.update: ${sensor_ticks_id}
