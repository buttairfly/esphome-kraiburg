substitutions:
  # preset defaults
  log_level: DEBUG
  binary_counter_pin: GPIO35
  analog_counter_pin: GPIO32
  control_led_pin: GPIO21

api:
  services:
    - service: set_${id}_pulse_total
      variables:
        new_total: float
      then:
        - globals.set:
            id: ${id}_energy
            value: !lambda 'return new_total;'
        - component.update: ${id}_pulse_meter_energy

packages:
  board: !include /config/common/boards/az-delivery-devkitc-v4.yaml
  wifi: !include /config/common/wifi.yaml
  web_server: !include /config/common/web_server.yaml

<<: !include /config/common/lights/control-led.yaml

# esphome:
#   on_boot:
#     - priority: 240
#       then:
#         - wait_until:
#             api.connected:
#         - delay: 500ms
#         - globals.set:
#             id: ${id}_energy
#             value: !lambda 'return id(${id}_homeassistant_energy).state;'
#         - component.update: ${id}_pulse_meter_energy

logger:
  logs:
    sensor.${id}_adc: ERROR

globals:
  - # this stores the energy in kWh as float with 2 decimals accuracy
    id: ${id}_energy
    type: float
    restore_value: no
    initial_value: '9000.01'

sensor:
  - id: ${id}_adc
    platform: adc
    pin: ${analog_counter_pin}
    update_interval: 50ms
    raw: true
    internal: true
    unit_of_measurement: ""
    filters:
      - multiply: 0.00024420024 # 1/(2^12-1)
  - name: ${name_verbose} Energy
    id: ${id}_pulse_meter_energy
    platform: template
    unit_of_measurement: kWh
    accuracy_decimals: 2
    lambda: 'return id(${id}_energy);'
    update_interval: 60s
  # - platform: homeassistant
  #   entity_id: sensor.${id}_energy
  #   id: ${id}_homeassistant_energy

binary_sensor:
  - platform: analog_threshold
    name: ${name_verbose} Binary
    id: ${id}_adc_binary
    sensor_id: ${id}_adc
    threshold:
      upper: 0.9999
      lower: 0.7
    filters:
      - delayed_on: 300ms
    on_release:
      - globals.set:
          id: ${id}_energy
          value: !lambda 'return id(${id}_energy) + 0.01;'
      - light.toggle:
          id: ${id}_control_led # needs control led
      - component.update: ${id}_pulse_meter_energy
